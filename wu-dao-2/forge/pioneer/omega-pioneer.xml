<?xml version="1.0" encoding="UTF-8"?>


<pipeline>

	<pioneer>

		<evolution version="1.0.2">
			<function>
				<new-list>
					<new no="1">
						增加对step的复用, 为要复用step的share属性取名,以后就按名提起 该标签名是 :
						<step-reference name="stepShareName" />
					</new>
					<new no="2">
						增加对pipeline的复用 为要复用pipeline的share属性取名,以后就按名提起 该标签名是 :
						<line-reference name="pipelineShareName" />
					</new>
				</new-list>
				<fix-list>
					<fix no="1">因修改参数起始编号带来的bug</fix>
					<fix no="2">类名错误, NamedObject 写成了 NamadObject(低级错误), 将其修改</fix>
				</fix-list>

				<bug-list>
					<bug no="1">

					</bug>
				</bug-list>

				<tune-list>
					<tune no="1">为了能够复用pipeline,调整了pipeline的deal方法, 使其有返回值</tune>
					<tune no="2">将参数的位置编号由原来的0开头调整为以1开头</tune>
					<tune no="3">去掉step的needSore和globalName属性,替换为output, 修改理由这样更直观</tune>
					<tune no="4">修改paramList标签为input, 这样更体现step的三个关键元素:input,algorithm,ouput</tune>
				</tune-list>

			</function>

			<pipeline-list>
				<pipeline name="input-process-output">
					<comment>this is a simple test about pipe line (a + b) * c = ?</comment>
					<step name="read a" share="readInt" output="a">
						<algorithm className="test.Test" methodName="readInt" />
					</step>
					<step name="read b" output="b">
						<step-reference name="readInt" />
					</step>

					<step name="(a + b) * c" output="result">
						<comment></comment>
						<algorithm className="test.Test" methodName="calculate" methodParams="java.lang.Integer,java.lang.Integer,java.lang.Double" />
						<input>
							<global-param name="a" index="1" />
							<global-param name="b" index="2" />
							<local-param value="1.5" index="3" meaning="c" />
						</input>
					</step>
					<step name="print">
						<pipeline-reference name="print" />
					</step>
				</pipeline>

				<pipeline name="print" share="print">
					<step name="print a message">
						<comment></comment>
						<algorithm className="test.Test" methodName="println" methodParams="java.lang.Object" />
						<input>
							<global-param name="result" index="1" />
						</input>
					</step>
				</pipeline>

			</pipeline-list>
		</evolution>

		<evolution version="2.1.1">

			<economy name="economyName" type="economyType">
				<meta>
					<property name="propertyName" value="propertyValue" />
				</meta>
				<market name="marketName" type="marketType">
					<meta>
						<property name="propertyName" value="propertyValue" />
					</meta>
					<supplier name="supplierName" type="supplierType">
						<meta>
							<property name="propertyName" value="propertyValue" />
						</meta>
						<server name="serverName" type="public|default|private" host="IP address">
							<meta>
								<property name="propertyName" value="propertyValue" />
							</meta>
							<service name="serviceName" type="public|default|private" port="service port">
								<meta>
									<property name="propertyName" value="propertyValue" />
								</meta>
								<request>
									<string-input>
										<![CDATA[string data]]>
									</string-input>
									或者
									<xml-input>
										<![CDATA[xml data]]>
									</xml-input>
									或者
									<json-input>
										<![CDATA[json data]]>
									</json-input>
									或者
									<byte-input>
										<![CDATA[byte data]]>
									</byte-input>
								</request>
								<response>
									<string-output>
										<![CDATA[string data]]>
									</string-output>
									或者
									<xml-output>
										<![CDATA[xml data]]>
									</xml-output>
									或者
									<json-output>
										<![CDATA[json data]]>
									</json-output>
								</response>
								<pipeline>
									<meta>
										<property name="propertyName" value="propertyValue" />
									</meta>
									<param>
										<define-param name="paramName">param value</define-param>
									</param>
									<line>
										<param>
											<define-param name="paramName">param value</define-param>
										</param>
										<unit>
											<param>
												<define-param name="paramName">param value</define-param>
											</param>
											<step>
												<param>
													<define-param name="paramName">param value</define-param>
												</param>
											</step>
										</unit>
									</line>
									<tree>
										<param>
											<define-param name="paramName">param value</define-param>
										</param>
										<if>
											<param>
												<define-param name="paramName">param value</define-param>
											</param>
											<unit></unit>
										</if>
										<else-if>
											<unit></unit>
										</else-if>
										<else>
											<unit></unit>
										</else>

										或者

										<switch>
											<case>
												<unit></unit>
											</case>
											<case>
												<unit></unit>
											</case>
										</switch>
									</tree>
									<loop>
										<for>
											<unit></unit>
										</for>

										或者

										<while>
											<unit></unit>
										</while>
									</loop>
								</pipeline>
							</service>
						</server>
					</supplier>
				</market>
			</economy>

		</evolution>


		<evolution version="5.0.0">

			<root>
				<meta>
					<property name="propertyName" value="propertyValue" />
				</meta>
				<global>
					<meta>
						<property name="propertyName" value="propertyValue" />
					</meta>
					<economy name="economyName" type="economyType">
						<meta>
							<property name="propertyName" value="propertyValue" />
						</meta>
						<market name="marketName" type="marketType">
							<meta>
								<property name="propertyName" value="propertyValue" />
							</meta>
							<supplier name="supplierName" type="supplierType">
								<meta>
									<property name="propertyName" value="propertyValue" />
								</meta>
								<server name="serverName" type="public|default|private" host="IP address">
									<meta>
										<property name="propertyName" value="propertyValue" />
									</meta>
									<service name="serviceName" type="public|default|private" port="service port">
										<meta>
											<property name="propertyName" value="propertyValue" />
										</meta>
										<request>
											<string-input>
												<![CDATA[string data]]>
											</string-input>
											或者
											<xml-input>
												<![CDATA[xml data]]>
											</xml-input>
											或者
											<json-input>
												<![CDATA[json data]]>
											</json-input>
											或者
											<byte-input>
												<![CDATA[byte data]]>
											</byte-input>
										</request>
										<response>
											<string-output>
												<![CDATA[string data]]>
											</string-output>
											或者
											<xml-output>
												<![CDATA[xml data]]>
											</xml-output>
											或者
											<json-output>
												<![CDATA[json data]]>
											</json-output>
										</response>
										<pipeline>
											<meta>
												<property name="propertyName" value="propertyValue" />
											</meta>
											<param>
												<define-param name="paramName">param value</define-param>
											</param>
											<line>
												<param>
													<define-param name="paramName">param value</define-param>
												</param>
												<unit>
													<param>
														<define-param name="paramName">param value</define-param>
													</param>
													<step>
														<param>
															<define-param name="paramName">param value</define-param>
														</param>
													</step>
												</unit>
											</line>
											<tree>
												<param>
													<define-param name="paramName">param value</define-param>
												</param>
												<if>
													<param>
														<define-param name="paramName">param value</define-param>
													</param>
													<unit></unit>
												</if>
												<else-if>
													<unit></unit>
												</else-if>
												<else>
													<unit></unit>
												</else>

												或者

												<switch>
													<case>
														<unit></unit>
													</case>
													<case>
														<unit></unit>
													</case>
												</switch>
											</tree>
											<loop>
												<for>
													<unit></unit>
												</for>

												或者

												<while>
													<unit></unit>
												</while>
											</loop>
										</pipeline>
									</service>
								</server>
							</supplier>
						</market>
					</economy>
				</global>
			</root>
		</evolution>
	</pioneer>

	<pioneer name="request的设计" version="1">
		<type name="string" verion="1">
			<request>
				<box>
					<string name="0">
						<line>data 000000</line>
					</string>
					<string name="1">
						<line>data 111111</line>
					</string>
				</box>
			</request>
		</type>

		<type name="number" verion="1">
			<request>
				<number>234234</number>
			</request>
		</type>
		<type name="date" version="1">
			<request>
				<date>2008-11-29 17:32:20</date>
			</request>
		</type>
		<type name="box" version="1">
			<request>
				<box>
					<string>
						<line>hello world!</line>
					</string>
					<date>2008-11-29 17:32:20</date>
					<number>234234</number>
					<box></box>
				</box>
			</request>
		</type>

		<type name="raw-box" version="1">
			<request>
				<raw-box>
					<![CDATA[
						SADFASDFADSFASDFASDFasdfadsfadsf
					]]>
				</raw-box>
			</request>
		</type>
		<type name="sentence" version="1">
			<request>
				<sentence-box>
					<![CDATA[
						ether 25 male,96 79 69,
					]]>
				</sentence-box>
			</request>
		</type>
		<type name="tree" version="1">
			<request>
				<tree-box>
					基类形{字符串, 数字, 日期} "字符串", (数字), [日期]
					<![CDATA[
						{ether, 25, male, {96, 79, 69}}
						{(ether)(25)(male){(96)(79)(69)}}
					]]>
				</tree-box>
			</request>
		</type>

		<type name="object" version="1">
			<request>
				<object-box>
					<![CDATA[
					  student : {
					  	name:ether,
					  	age:25,
					  	sex:male,
					  	score : {
					  		math : 96,
					  		chinese : 79
					  		english : 69
					  	}
					  }
					]]>
				</object-box>
			</request>
		</type>
		<type name="xml" verion="1">
			<request>
				<![CDATA[
					<student name="ether" age="25" sex="male">
						<score math="96" chinese="79" englist="69">
						</score>
					</studnet>
				]]>
			</request>
		</type>
		<omega version="2">
			<root>
				<global name="self">
					<economy name="self">
						<market name="self">
							<supplier name="self">
								<server name="self">
									<service-define>
										<service name="input" port="21001">
											<competitor name="self.self.self.self.io-server.input1" priority="1"/>
											<competitor name="self.self.self.self.io-server.input2" priority="2"/>
										</service>
									</service-define>
									
									<telnet name="self" port="21001">
										<start/>
										<if condition="1=1">
											<unit></unit>*
										</if>
										<unit serviceName="">
											<define>
												<var name="step">step-value</var>
												<var name="step2">step-value-2</var>
											</define>
											<request name="request">
												<define>
													<var name="request">request-value</var>
													<var name="request2">request-value-2</var>
												</define>
												<data>
													<line><![CDATA[request data line1&]]></line>
													<line><![CDATA[request data line2]]></line>
												</data>
											</request>
											<response name="response">
												<define>
													<var name="response">response-value</var>
													<var name="response2">response-value-2</var>
												</define>
												<data>
													<line><![CDATA[response data line1&]]></line>
													<line><![CDATA[response data line2]]></line>
												</data>
											</response>
										</unit>
										<telnet serviceName="">
											
										</telnet>
										<end/>
									</telnet>
								</server>
								<server name="io-server" host="127.0.0.1">
									<jdbc:oracle:thin name="csair_db">
										<property name="connection.driver_class">oracle.jdbc.driver.OracleDriver</property>
										<property name="connection.url">jdbc:oracle:thin:@10.89.187.20:1521:nhzj</property>
										<property name="dialect">net.sf.hibernate.dialect.Oracle9Dialect</property>
										<property name="connection.username">csair</property>
										<property name="connection.password">csair</property>
										<property name="show_sql">true</property>
										<property name="jdbc.maxActive">50</property>
										<property name="jdbc.maxIdle">10</property>
										<property name="jdbc.maxWait">9000</property>
										<property name="jdbc.fetch_size">50</property>
										<property name="jdbc.batch_size">50</property>
										<property name="hibernate.cache.use_query_cache">false</property>
										<property name="hibernate.cglib.use_reflection_optimizer">true</property>
										<property name="use_outer_join">true</property>
									</jdbc:oracle:thin>
								</server>
							</supplier>
						</market>
					</economy>
				</global>
			</root>
		</omega>

	</pioneer>

</pipeline>